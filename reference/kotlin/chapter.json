[{"title":"Basic Syntax","details":["Defining packages","Defining functions","Defining local variables","Comments","Using string templates","Using conditional expressions","Using nullable values and checking for null","Using type checks and automatic casts","Using a for loop","Using a while loop","Using when expression","Using ranges","Using collections"]},{"title":"Idioms","details":["Idioms"]},{"title":"Coding Conventions","details":["Colon","Lambdas","Unit"]},{"title":"Basic Types","details":["Numbers","Characters","Arrays","Strings"]},{"title":"Packages","details":["Packages","Imports"]},{"title":"Control Flow","details":["If Expression","When Expression","For Loops","While Loops"]},{"title":"Returns and Jumps","details":["Break and Continue Labels","Return at Labels"]},{"title":"Classes and Inheritance","details":["Classes"]},{"title":"Properties and Fields","details":["Declaring Properties","Getters and Setters","Compile-Time Constants","Late-Initialized Properties"]},{"title":"Interfaces","details":["Interfaces","Implementing Interfaces","Properties in Interfaces","Resolving overriding conflicts"]},{"title":"Visibility Modifiers","details":["Packages","Classes and Interfaces"]},{"title":"Extensions","details":["Extension Functions","Extensions are resolved statically","Nullable Receiver","Extension Properties","Companion Object Extensions","Scope of Extensions","Declaring Extensions as Members","Motivation"]},{"title":"Data Classes","details":["Data Classes"]},{"title":"Generics","details":["Generics","Variance","Type projections","Generic functions","Generic constraints"]},{"title":"Nested Classes","details":["Nested Classes","Inner classes","Anonymous inner classes"]},{"title":"Enum Classes","details":["Enum Classes","Initialization","Anonymous Classes","Working with Enum Constants"]},{"title":"Delegation","details":["Class Delegation"]},{"title":"Delegated Properties","details":["Delegated Properties","Standard Delegates","Storing Properties in a Map"]},{"title":"Functions","details":["Function Declarations","Function Usage","Function Scope","Generic Functions","Tail recursive functions"]},{"title":"Inline Functions","details":["Inline Functions","noinline","Non-local returns","Reified type parameters"]},{"title":"Destructuring Declarations","details":["Destructuring Declarations","Example: Returning Two Values from a Function","Example: Destructuring Declarations and Maps"]},{"title":"Collections","details":["Collections"]},{"title":"Ranges","details":["Ranges","How it works","Utility functions"]},{"title":"Type Checks and Casts","details":["is and !is Operators","Smart Casts","\"Unsafe\" cast operator","\"Safe\" (nullable) cast operator"]},{"title":"This expressions","details":["Qualified this"]},{"title":"Equality","details":["Structural equality"]},{"title":"Null Safety","details":["Nullable types and Non-Null Types","Checking for null in conditions","Safe Calls","Elvis Operator","The !! Operator","Safe Casts","Collections of Nullable Type"]},{"title":"Exceptions","details":["Exception Classes","Checked Exceptions"]},{"title":"Annotations","details":["Annotation Declaration","Annotation Use-site Targets","Java Annotations"]},{"title":"Reflection","details":["Class References","Function References","Property References","Constructor References"]},{"title":"Calling Java from Kotlin","details":["Calling Java code from Kotlin","Getters and Setters","Escaping for Java identifiers that are keywords in Kotlin","Null-Safety and Platform Types","Java generics in Kotlin","Java Arrays","Java Varargs","Checked Exceptions","Object Methods","Accessing static members","SAM Conversions","Using JNI with Kotlin"]},{"title":"Calling Kotlin from Java","details":["Package-Level Functions","Instance Fields","Static Fields","Static Methods","KClass","Handling signature clashes with @JvmName","Overloads Generation","Checked Exceptions","Variant generics"]},{"title":"Dynamic Type","details":["Dynamic Type"]},{"title":"JavaScript Interoperability","details":["JavaScript Modules","@JsName Annotation"]},{"title":"JavaScript Reflection","details":["JavaScript Reflection"]},{"title":"Documenting Kotlin Code","details":["KDoc Syntax","Block Tags","Inline Markup","Module and Package Documentation"]},{"title":"Using Maven","details":["Plugin and Versions","Dependencies","Compiling Kotlin only source code","Compiling Kotlin and Java sources","Jar file","Self-contained Jar file"]},{"title":"Using Ant","details":["Targeting JVM with Kotlin-only source","Targeting JVM with Kotlin-only source and multiple roots","Targeting JVM with Kotlin and Java source","Targeting JavaScript with single source folder","Targeting JavaScript with Prefix, PostFix and sourcemap options","Targeting JavaScript with single source folder and metaInfo option"]},{"title":"Using Gradle","details":["Plugin and Versions","Targeting the JVM","Targeting JavaScript","Targeting Android","Configuring Dependencies","Annotation processing","Incremental compilation","Compiler Options"]},{"title":"Kotlin and OSGi","details":["Maven","Gradle"]}]